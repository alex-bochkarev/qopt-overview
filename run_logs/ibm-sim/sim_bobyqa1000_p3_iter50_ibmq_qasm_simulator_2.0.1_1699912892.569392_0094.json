{"instance_id": "MWC87", "instance_filename": "MWC87_25_N25E212_ERG_p0.75.qubo.json", "solver_name": "QUBOIBMSolver", "args": ["{'maxiter': 50}", "BOBYQA", "0", "0", "0", "0", "3", "1000", "1000", "ibmq_qasm_simulator", "ibm_quantum", "None", "8h", "False", "1", "1"], "timestamps": {"start": 1699956242.052303, "end": 1699956402.331763}, "solver": {"exception": "'Unable to retrieve job result. Error preprocessing job.'", "traceback": "Traceback (most recent call last):\n  File \"C:\\Users\\admin\\Documents\\qopt\\benchmark\\bench.py\", line 152, in run\n    solver = self._run(instance_id, *args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\Documents\\qopt\\benchmark\\bench_qubo.py\", line 204, in _run\n    raise e\n  File \"C:\\Users\\admin\\Documents\\qopt\\benchmark\\bench_qubo.py\", line 200, in _run\n    res = self._run_qpu_estimator(session, estimator_options, optimizer_name, optimizer_kwargs,\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\Documents\\qopt\\benchmark\\bench_qubo.py\", line 113, in _run_qpu_estimator\n    res = optimizer_obj.minimize(fun=lambda params: cost_func(params, ansatz, qubitOp, estimator), x0=x0,\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\qiskit\\algorithms\\optimizers\\bobyqa.py\", line 72, in minimize\n    res, history = skq.minimize(\n                   ^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\skquant\\opt\\__init__.py\", line 56, in minimize\n    return optimizer.minimize(func, x0, bounds, budget, options, **optkwds)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\skquant\\opt\\_pybobyqa.py\", line 33, in minimize\n    result = pybobyqa.solve(\n             ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\pybobyqa\\solver.py\", line 811, in solve\n    solve_main(objfun, x0, args, xl, xu, npt, rhobeg, rhoend, maxfun, nruns, nf, nx, nsamples, params,\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\pybobyqa\\solver.py\", line 159, in solve_main\n    exit_info = control.initialise_coordinate_directions(number_of_samples, num_directions, params)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\pybobyqa\\controller.py\", line 183, in initialise_coordinate_directions\n    f_list, num_samples_run, exit_info = self.evaluate_objective(x, number_of_samples, params)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\pybobyqa\\controller.py\", line 366, in evaluate_objective\n    f_list[i] = eval_objective(self.objfun, remove_scaling(x, self.scaling_changes), self.args, eval_num=self.nf, pt_num=self.nx,\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\pybobyqa\\util.py\", line 53, in eval_objective\n    f = objfun(x, *args)\n        ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\AppData\\Roaming\\Python\\Python311\\site-packages\\SQCommon\\_objective.py\", line 24, in __call__\n    result = self.objective(par)\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\Documents\\qopt\\benchmark\\bench_qubo.py\", line 113, in <lambda>\n    res = optimizer_obj.minimize(fun=lambda params: cost_func(params, ansatz, qubitOp, estimator), x0=x0,\n                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\admin\\Documents\\qopt\\benchmark\\bench_qubo.py\", line 155, in cost_func\n    estimator_result = estimator.run(ansatz, hamiltonian, parameter_values=params).result()\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\ProgramData\\anaconda3\\envs\\qopt\\Lib\\site-packages\\qiskit_ibm_runtime\\runtime_job.py\", line 222, in result\n    raise RuntimeJobFailureError(f\"Unable to retrieve job result. {error_message}\")\nqiskit_ibm_runtime.exceptions.RuntimeJobFailureError: 'Unable to retrieve job result. Error preprocessing job.'\n", "fail_timestamp": 1699956402.331763}, "success": false, "version": "2.0.1"}